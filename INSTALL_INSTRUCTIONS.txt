%% Last install - Fresh Ubuntu 20.04 with python 3.10.4

%%%%%%   Manual MountainSort/Lab Install and Setup %%%%%%
% Clone this repo (Jadhav ms4 pipeline)
% In a terminal, cd into this repo
------
%% Download and install miniconda %%
```shell
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda3.sh
        bash miniconda3.sh -bp ~/conda
        echo ". ~/conda/etc/profile.d/conda.sh" >> ~/.bashrc
```

%% Setup a conda environment and install mountainlab and all processors %%
```shell
        conda create --name mlab
        conda activate mlab
        conda install conda
        conda update conda
        conda config --add channels conda-forge
        conda install -c flatiron -c conda-forge mountainlab mountainlab_pytools ml_ephys ml_ms4alg ml_ms3 ml_pyms
        conda install -c flatiron -c conda-forge qt-mountainview
```

%% Create configuration file for mountainlab %%
```shell
        mountainENV=~/conda/envs/mlab/etc/mountainlab/mountainlab.env
        touch $mountainENV
```

% Now you can set the temporary directory path to be on the same drive as your data
% Also add the `~/.mountainlab/packages/` to the mountainlab package search path
% Just modify and add these lines to the `mountainlab.env` file you created:
    % `ML_TEMPORARY_DIRECTORY='/path/to/data/drive/tmp/mountainlab-tmp'`
    % `ML_ADDITIONAL_PACKAGE_SEARCH_DIRECTORIES='~/.mountainlab/packages'`
```shell
echo "ML_TEMPORARY_DIRECTORY='~/media/jmolson/SpeedData/mtnLabTmp" >> $mountainENV
echo "ML_ADDITIONAL_PACKAGE_SEARCH_DIRECTORIES='~/.mountainlab/packages'" >> $mountainENV
```

%% Get additional processors from franklab for drift tracking and tagged curation %%
    % Symlink the folders from this repository into `~/.mountainlab/packages/`
    % [FrankLab Tagged Curation](https://bitbucket.org/franklab/franklab_mstaggedcuration/src/master/)
    % [FrankLab Drift Tracking](https://bitbucket.org/franklab/franklab_msdrift/src/master/)
```shell
    mkdir ~/.mountainlab
    mkdir ~/.mountainlab/packages
    mtnPackLoc=~/.mountainlab/packages
ml
    alias qwd='printf "%q\n" "$(pwd)"'
    qwd
    (copy output of qwd into the path to this repo placeholder below)
    ln -s /PATH/TO/THIS/REPO/franklab_mstaggedcuration_master $mtnPackLoc/franklab_mstaggedcuration
    ln -s /PATH/TO/THIS/REPO/franklab_msdrift_master $mtnPackLoc/franklab_msdrift
```

%% Set Matlab Path %%
    % Add `~/conda/env/mlab/lib/node_modules/mountainlab/utilities/matlab/mdaio/` to your matlab path

%%%%% POTENTIAL ISSUES %%%%%
%%% NodeJS issue:
%% Problem: Need to update nodejs, if you try to run ml-config and get this error:
```
async function main() {
      ^^^^^^^^

SyntaxError: Unexpected token function
    at createScript (vm.js:56:10)
    at Object.runInThisContext (vm.js:97:10)
    at Module._compile (module.js:549:28)
    at Object.Module._extensions..js (module.js:586:10)
    at Module.load (module.js:494:32)
    at tryModuleLoad (module.js:453:12)
    at Function.Module._load (module.js:445:3)
    at Module.runMain (module.js:611:10)
    at run (bootstrap_node.js:394:7)
    at startup (bootstrap_node.js:160:9)
```
%% Solution:
% https://github.com/nvm-sh/nvm#installing-and-updating - will give a wget line like the one below, but with the most recent version.
Go to https://nodejs.org/en/about/releases/, find the newest long term support version. (18 in 2022)
```shell
    wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
```
% In a terminal, cd back into this repo (Jadhav ms4 pipeline)
% Check that the nvm installed
% install your chosen version of nodeJS
``shell
    nvm -v
    nvm install 18
    node -v
```
