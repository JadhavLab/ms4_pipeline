%% Last install - Fresh Ubuntu 20.04 with python 3.10.4
% Caveot: while figuring this out, i installed things like pip. so not 100% this is perfect clean instructions.

%%%%%%   Manual MountainSort/Lab Install and Setup %%%%%%
------
%% Download and install miniconda %%
```shell
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda3.sh
        bash miniconda3.sh -bp ~/conda
        echo ". ~/conda/etc/profile.d/conda.sh" >> ~/.bashrc
        conda update conda
```

%% Setup a conda environment and install mountainlab and all processors %%
```shell
        conda create --name mlab
        conda activate mlab
        conda install conda
        conda update conda
        conda config --add channels conda-forge
        conda install -c flatiron -c conda-forge mountainlab mountainlab_pytools ml_ephys ml_ms4alg ml_ms3 ml_pyms
        conda install -c flatiron -c conda-forge qt-mountainview
        conda install nodejs -c conda-forge --repodata-fn=repodata.json
```

% Clone this repo (Jadhav ms4 pipeline)
% In a terminal, cd into this repo
```shell
  conda env create -f mlab_env.yml
```

%% Create configuration file for mountainlab %%
mountainENV=~/conda/envs/mlab/etc/mountainlab/mountainlab.env
```shell
        touch $mountainENV
```

% Now you can set the temporary directory path to be on the same drive as your data
% Also add the `~/.mountainlab/packages/` to the mountainlab package search path
% Just modify and add these lines to the `mountainlab.env` file you created:
    % `ML_TEMPORARY_DIRECTORY='/path/to/data/drive/tmp/mountainlab-tmp'`
    % `ML_ADDITIONAL_PACKAGE_SEARCH_DIRECTORIES='~/.mountainlab/packages'`
    e.g.
```shell
echo "ML_TEMPORARY_DIRECTORY='/media/jmolson/SpeedData/mtnLabTmp" >> $mountainENV
echo "ML_ADDITIONAL_PACKAGE_SEARCH_DIRECTORIES='~/.mountainlab/packages'" >> $mountainENV
```

%% Get additional processors from franklab for drift tracking and tagged curation %%
    % Symlink the folders from this repository into `~/.mountainlab/packages/`
    % Note, there are small differences from our repo to current Frank lab versions, but I don't know how to get their current version to work, so I am sticking with Jadhav Lab repo.
    % [FrankLab Tagged Curation](https://bitbucket.org/franklab/franklab_mstaggedcuration/src/master/)
    % [FrankLab Drift Tracking](https://bitbucket.org/franklab/franklab_msdrift/src/master/)
```shell
    mkdir ~/.mountainlab
    mkdir ~/.mountainlab/packages
    mtnPackLoc=~/.mountainlab/packages
    alias qwd='printf "%q\n" "$(pwd)"'
    qwd
```
    (copy output of qwd into the path to this repo placeholder below)
    ln -s /PATH/TO/THIS/REPO/franklab_mstaggedcuration $mtnPackLoc/franklab_mstaggedcuration
    ln -s /PATH/TO/THIS/REPO/franklab_msdrift $mtnPackLoc/franklab_msdrift
    e.g.
```shell
    ln -s /media/jmolson/4TBData/Code\ Repos/JadhavBitbucketRepos/ms4_pipeline/franklab_mstaggedcuration $mtnPackLoc/franklab_mstaggedcuration
    ln -s /media/jmolson/4TBData/Code\ Repos/JadhavBitbucketRepos/ms4_pipeline/franklab_msdrift $mtnPackLoc/franklab_msdrift
```

%% Test
ml-config
ml-list-processors



%% Set Matlab Path %%
    % Add `~/conda/env/mlab/lib/node_modules/mountainlab/utilities/matlab/mdaio/` to your matlab path

%%%%% POTENTIAL ISSUES %%%%%
%%% NodeJS issue:
%% Problem: Need to update nodejs, if you try to run ml-config and get this error:
```
async function main() {
      ^^^^^^^^

SyntaxError: Unexpected token function
    at createScript (vm.js:56:10)
    at Object.runInThisContext (vm.js:97:10)
    at Module._compile (module.js:549:28)
    at Object.Module._extensions..js (module.js:586:10)
    at Module.load (module.js:494:32)
    at tryModuleLoad (module.js:453:12)
    at Function.Module._load (module.js:445:3)
    at Module.runMain (module.js:611:10)
    at run (bootstrap_node.js:394:7)
    at startup (bootstrap_node.js:160:9)
```

%%% Compiler Issue
Getting a GOMP_parallel error with ml_list_processors?

then do:
https://mountainsort.readthedocs.io/en/latest/installation_advanced.html
do prereqs and compilation.
I extracted the code and compiled in download folder - this is all temporary.
conda create --name msTMP
conda activate msTMP
conda install python=3.6

go to
./packages/pyms/basic
copy:
bandpass_filter_cpp.cpython-36m-x86_64-linux-gnu.so
replace the file with the same name in:
~/conda/envs/mlab/lib/python3.6/site-packages

Should fix the problem!
